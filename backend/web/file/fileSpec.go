// Package file provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package file

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xXbWvjRhD+K9O9g3yoEsvKG2foh5TkSspdOZpAKYlr1tLI2ou0u9kd2TFG/73Myo7t",
	"WJcrpQRS8snW7uy8PPPM7OxCpKayRqMmLwYL4dMCKxn+/izTu9p+VCXyFz7IyvLfm4XQskIxENZ4mjj0",
	"9+WBrMkcpEbno/7J6Yfjk9PkKBaRIBUEkzg53I8P95PD634ySE4HSfxjnAziWDTDSFhnLDpSGKxmKs+f",
	"2iuVZjXv4NyANgSYKQIqlIdclQiV1LUsy/kPt/odXBLMVFnCGMFM0c2cIkIN4zlQgXD26frid7j68+r6",
	"4jOkpqqkzg5uNbs6t2zj4r6WpWiiR6OVfBilRmtMSRnt4SfY68fx3q3mkKcyretqNDPublRhxZvJSdI/",
	"Ot671UU9wZGVEwxnTJ7vbdq51B4dhfgVYRVCf+8w5zB765T0lvnocRrOVZ5/Yq+aRzXSOTnn7zYlC5Gh",
	"T52y7KsYhFUweQh9HNIZEFu74ckpPQkKVZcCXvUkKwu5cTArUD/VBTPpIXUoCTMRidy4SpIYiEwS7gel",
	"O8aaSDi8r5XDTAxuWteXDkRt/oePZ8z4K6bEDl44Z9xn9F5OgqPbtEHeHVXr7edtbot3mdsCfMdcuVzd",
	"RotXgQpJoDyzy0qHGYyRZsjAzUxAzHfCHxaeKvQWU5Ur9Aw9FeggmCikhzGrlFmGWQQOKzPFDIyDWqeF",
	"1JOQC9R1xcG2nI5WnIvEOZZIm2F/A6UQ5VJoF6MmEh7T2imaXzFLW2TGKB26s5qK9dfHFSl+/eNaRG2P",
	"YU3t7hqOgsiKhhUrnZuQRUXcA0I2gNOBDnWKcPblUkRiis63QPUP4oOYcTQWtbRKDMRhWIqElVQEz3ot",
	"a1uUAwA7eLdAepBlCV3dbZP4nEamhOSzl5kYLGFt2ybvOvTWaN/iksRHHfmt0xS9h5UkR3AU91kwNZpQ",
	"E/+V1pYqDXZ6Xz0fXPXp73WNrZoJwG7bvzZ3qKFS3is9YfpUsuQKxow9OY7jF/PkCt0UHXiVIYTiFEEk",
	"l3VJL+ZErfHBYkqYrXzgypQTz8WwZM+wicQEaTeXE6R/yZtfkL5JmuQ/C37jOu8I/Y2Jr5CJTbRqar1F",
	"+zviy7R5rsW16yBhebek3yXss30uNFgnKyR0Pgxr2+Z+655AgAwsPYzWo96zE+VpPxF8MbCYpEKsZh6x",
	"EbnYvL/I1Rht5MNKInR8/q9OOzfx/ofhoh837ztGluFbO//ftnNbU9co4Mk49FusXc1jGb8nHnm/UyBf",
	"avpn1RGUdgzpZPj9snQhe7UlcrwL6+OTYVkreV2W83WkoWBejqaXeipLla1TCcv3y1vhvoLbb+MBEmpr",
	"8+lxM2yGzd8BAAD//4I+TJrdEAAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
