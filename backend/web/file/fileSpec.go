// Package file provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package file

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xX32/bNhD+V25sgTxMiWXlF2pgDx2SFQHaoWjyMiSZQVMnm61EKuTJTmD4fx+Okvwj",
	"Vt2gy4oVyJNliuLxvvu+j8e5ULYorUFDXgzmwqsJFjI8/i7Vl6r8Q+fI//BeFiU/Xs+FkQWKgSitp7FD",
	"f5cfyIrsgbImG/ZPTt8cn5wmR7GIBOkwMYmTw/34cD85vOong+R0kMS/xskgjsXiNhKlsyU60hii1mvP",
	"RYpeOV2StkYMwijYDGiCMAr7gow3Fgl6KDmEJ6fNWCzamI8X4FFPsighsw5mEzSP14KZ9KAcSsJURCKz",
	"rpAkBiKVhPth0a1gi+WIHX1GRRz+3DnrPqD3chy2sZkd8tthsXq9vaLDu0o7TMXg+tH0245wXJ4znWXv",
	"tekIlzejm1jwKNBEEmgPXH7pMIUR0gwZlpkNePhOcMPA4wV9iUpnGj0DSxN0EEJMpIcRLynTFNMIHBZ2",
	"iilYB5VRE2nGAWk0VcHJnt9VMheRuDAeHYlInGGOtJ72LtxbID6hL63xHWCkOsseM7kGSLyCMwvGEmCq",
	"CWiifU2JQppK5vnDLzfmFVwQzHSewwjBTtHNnCZCA6OHwKS376/OP8HlX5dX5x8Y1EKa9ODGrECs01tE",
	"y6CFvB8qawwqhtHDb7DXj+O9G8NimkpVVcVwZt2XYYEFv0xOkv7R8d6NmVRjHJZyjOEbm2V763Ea+FhZ",
	"mrAIqb92mHGavZXYe43SexsMWiErnZMP/J+B6BYlp70uzADZCLUZL1nF5W3hFr3Ku15ulcx7rXUoV5E2",
	"2qPr1VL0vZ2uchr/h5Jf7XTLsI5bw/peY+AhbTIbNK8pRGHkgaFHh0YhvP14ISIxRefrBPoH8UHM+dkS",
	"jSy1GIjDMBSJUtIkVLaBrc4+yGULh1p2HmSeQxe464iw6Fkzkr+9SMWgEWF9FvBb1+grRE/iow43qJRC",
	"76GdyRkcxzFPVNYQGuJHWZa5ViFO77PnD9vD51uE3XDYAOxm/Et0U3TgdYoQDFSEKZmscvphm6gM3peo",
	"CNN2D8wJOfbsdE3NbheRGCNtIzhG+s5qvUP6aqmSZ0t+rTPoSP2l/k+u/yJqBdyb179DNtTFLjnX4yCh",
	"OXXVN2myU9PBTJwskND5cCZuhvuzu/MCstDscN04d5n3aT8RbII8TdJERG0fuZa5WO9/yFUYrdWjlETo",
	"+Pu/O+Ncx/tvbuf9ePG6w5FvX6zrma2rrKjrsPFkHfoNrrT9YcrN0pJtW7T8WNHTOBkW7bgSkOXmrNlC",
	"+tMS83gb1mW30jA0q/L8YZXpIhJHP5CmF2Yqc52uSglNU/Qil11Oz0Xc51vIttl/tQ1IV+1he0FTlXNo",
	"qNv2A1GkSUHuPAHeIbV9/785AHSWgRxLbTz9tGp7PrpuXUGf2By9SPf/KN2lWlm9i8U/AQAA//8teRR2",
	"KRMAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
