// Package file provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package file

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xX0W/buA/+V/jTBvTh5zaO265YgHvYob2hwHYY1r4c2l6gyHSszZZciU5aBPnfD5Tt",
	"JmncbNh2ww3oUxxaEsmP/D7RC6FsWVmDhrwYLYRXOZYyPP4u1ee6+kMXyP/wTpYVP14thJElipGorKep",
	"Q39bHMia7IGyJhsPX528Pn51khzFIhKkw8IkTg7348P95PBymIySk1ES/z9ORnEsljeRqJyt0JHG4LU5",
	"eyFS9MrpirQ1YhSsYDOgHGES4oKMA4sE3VfswpPTZiqWnc/HB7DVkywryKyDeY7m8Vkwlx6UQ0mYikhk",
	"1pWSxEikknA/HLrlbPlgsZNPqIjdnzln3Xv0Xk5DGJvZIb8dl6vX2yc6vK21w1SMrh4tv+lxx+U51Vn2",
	"Tpsed0Vr3cSCrUC5JNAeuPzSYQoTpDkyLHMb8PC94AbD4wN9hUpnGj0DSzk6CC5y6WHCR8o0xTQCh6Wd",
	"YQrWQW1ULs00II2mLjnZs9taFiIS58ajIxGJUyyQ1tPehXsHxEf0lTW+B4xUZ9njTm4AEi/g1IKxBJhq",
	"Asq1b1qilKaWRXH/v2vzAs4J5rooYIJgZ+jmThOhgcl96KQ37y7PPsLFXxeXZ+8Z1FKa9ODarEBs0ltG",
	"D05LeTdW1hhUDKOH32BvGMd714bJNJOqrsvx3LrP4xJLfpm8SoZHx3vXJq+nOK7kFMMem2V7635a+JhZ",
	"mrAMqb90mHGagxXZBy3TBxsdtEJWOifv+T8D0U9KTnudmAGyCWozfegqLm8HtxjU3g0Kq2Qx6KRDuZq0",
	"0R7doKGiH+xUlZP4X6T8KtItwTruBOtbhYFN2mQ2cF5T8MLIA0OPDo1CePPhXERihs43CQwP4oOY87MV",
	"GllpMRKHwRSJSlIeKtvC1mQf6LKFQ0M7D7IooA/cdUSY9MwZyXvPUzFqSdjcBfzWtfwK3pP4qEcNaqXQ",
	"e+hWcgbHccwLlTWEhvhRVlWhVfAz+OR5Y3f5fKlhNxQ2ALvp/wLdDB14nSIEARVhSSbrgn5aELXBuwoV",
	"YdrFwGumSNt4TZG+sTZvkZ4sTPLDUl2bA3oSfa72E9VeRh05B4vmd8xiudxF1cYOEtobVX2xKXbyNQiF",
	"kyUSOh/uu013f/ZPVUAW2gjXRXGXMJ8ME8ECx8sk5SLqZsS1zMX6bEOuxmgN/UoSoeP9f/f6uYr3X98s",
	"hvHyZY/a3jzL0nfJUlVT37XhyTr0G53RTXopjz0PvbXVhB9q+roODIf2DPdkecxqQ0h/2TY83ob1Ye5o",
	"+zGri+J+lekyEkc/sSnPzUwWOl2VEtrx5pkcKxXnku3z18O2kD95oaersa77sFK1c2ioX9JDW0iTgtyp",
	"7m+Runn9e8RdZxnIqdTG0y/LrR/XnFufjl855jwT9b9E1OXynwAAAP//McK4kswSAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
