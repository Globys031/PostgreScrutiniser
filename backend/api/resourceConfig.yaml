openapi: "3.0.0"
info:
  version: 1.0.0
  title: PostgreScrutiniser
  description: Resource Configurations API
servers:
  - url: http://localhost:8080/api
paths:
  /resource:
    get:
      description: |
        Returns all resource configuration check results
      tags:
        - resource
      operationId: getResourceConfigs
      # Responses only change the documentation, not the code generated by `openapi-codegen`
      responses:
        '202':
          description: success response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/resourceConfig'
        '500':
          description: Server side error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    patch:
      description: applies one or more suggestions
      tags:
        - resource
      operationId: patchResourceConfigs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/resourceConfigPatchSchema'
      responses:
        '201':
          description: Resource configuration created successfully
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      description: resets all content inside of postgresql.auto.conf (wipes its content)
      tags:
        - resource
      operationId: deleteResourceConfigs
      responses:
        '205':
          description: success response
        '500':
          description: Server side error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /resource/{config}:
    get:
      description: Returns a specific resource check
      tags:
        - resource
      operationId: getResourceConfigById
      parameters:
        - name: config
          in: path
          description: name of resource config to get
          required: true
          example: "shared_buffers"
          schema:
            type: string
            enum: ["autovacuum_work_mem", "dynamic_shared_memory_type", "hash_mem_multiplier", "huge_page_size", "huge_pages", "maintenance_work_mem", "max_prepared_transactions", "max_stack_depth", "shared_buffers", "shared_memory_type", "temp_buffers", "work_mem", "logical_decoding_work_mem"]
      responses:
        '202':
          description: success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resourceConfig'
        '400':
          description: Invalid parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Server side error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
components:
  schemas:
    resourceConfig:
      type: object
      properties:
        name:
          type: string
          description: Name of the setting
        value:
          type: string
          description: Value of the setting
        unit:
          type: string
          description: Unit of measurement (s, ms, kB, 8kB, etc.)
        enum_vals:
          type: string
          description: specifies what type of values setting could have
        suggested_value:
          type: string
          description: Value that will be suggested after running check
        details:
          type: string
          description: Details informing why a value was suggested
        requires_restart:
          type: boolean
          description: Whether a restart is required after changing the value
        got_error:
          type: boolean
          description: specifies whether check got an error
      example:
        - name: "autovacuum_work_mem"
          value: "-1"
          unit: "kB"
          enum_vals: ""
          suggested_value: "131072"
          details: "This suggestion was made by dividing current available memory(2236112.00kB) by 4 and by how many autovacuum_max_workers(3) are set"
          got_error: false
        - name: "huge_pages"
          value: "off"
          unit: ""
          enum_vals: "{off,on,try}"
          suggested_value: "off"
          details: "Kernel parameter nr_hugepages is set to 0. Because of that, PostgreSQL cannot request huge pages"
          got_error: false
    resourceConfigPatchSchema:
      type: object
      required: 
        - name
        - suggested_value
      properties:
        name:
          type: string
          description: Name of the setting
        suggested_value:
          type: string
          description: Value that will be suggested after running check
      example:
        - name: "autovacuum_work_mem"
          suggested_value: "10000"
        - name: "huge_pages"
          suggested_value: "off"
    ErrorMessage:
      type: object
      required:
        - error_message
      properties:
        error_message:
          type: string